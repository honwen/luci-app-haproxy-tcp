#!/bin/sh /etc/rc.common

START=85
NAME=haproxy-tcp
USE_PROCD=1

uci_get_by_type() {
	local ret=$(uci get $NAME.@$1[0].$2 2>/dev/null)
	echo ${ret:=$3}
}

uci_bool_by_type() {
	case "$(uci_get_by_type $1 $2)" in
	1 | on | true | yes | enabled) return 0 ;;
	esac
	return 1
}

start_instance() {
	procd_open_instance
	procd_set_param respawn
	procd_set_param stdout 1
	procd_set_param stderr 1
	procd_set_param term_timeout 3
	procd_set_param nice -5
	procd_set_param limits nofile="65535 65535"
	[ -e /proc/sys/kernel/core_pattern ] && {
		procd_append_param limits core="unlimited"
	}
	procd_set_param command $@
	procd_close_instance
}

service_triggers() {
	procd_add_reload_trigger $NAME
}

genline_srv() {
	local line="$1"
	local addr="$(echo -n $line | awk '{print $1}')"
	local pedding_len=$((32 - $(echo $addr | wc -c) - 2))
	[ $pedding_len -lt 1 ] && pedding_len=1
	local uuid="$(echo -n $line | md5sum | cut -c1-$pedding_len)"
	echo "    server ${uuid}__${addr}    $line" | tr -d "\'"
}

boot() {
	local delay=$(uci_get_by_type $NAME startup_delay)
	(sleep ${delay:-0} && start >/dev/null 2>&1) &
	return 0
}

start_service() {
	uci_bool_by_type $NAME enable || exit 0
	local listen=$(uci_get_by_type $NAME listen :6666)
	local stats=$(uci_get_by_type $NAME stats :7777)
	local retries=$(uci_get_by_type $NAME retries 1)
	local timeout=$(uci_get_by_type $NAME timeout 999)

	mkdir -p /var/etc
	cat <<-EOF >/var/etc/$NAME.cfg
		defaults
		    mode tcp
		    retries ${retries:-2}
		    timeout connect ${timeout}ms
		    timeout client ${timeout}ms
		    timeout server ${timeout}ms

		listen stats
		    bind ${stats}
		    mode http
		    stats uri /
		    stats refresh 10s

		frontend tcp-in
		    bind ${listen}
		    default_backend tcp-out

		backend tcp-out
		$(uci_get_by_type $NAME upstreams | grep -q 'weight' && echo "    balance static-rr")
		$(
			IFS=$'\n'
			for upstream in $(uci_get_by_type $NAME upstreams | awk -F"'" -v OFS="\n" '{$1=$1}1' | sed '/^[ \t]*$/d'); do
				if echo $upstream | grep -q 'weight'; then
					genline_srv "$upstream"
				else
					IFS=' '
					for it in $upstream; do
						genline_srv "$it"
					done
				fi
			done
		)

	EOF

	[ ${timeout} -lt 0 ] && sed '/ timeout /d' -i /var/etc/$NAME.cfg

	start_instance /usr/sbin/$NAME -q -f /var/etc/$NAME.cfg -p /var/run/$NAME.pid
}

kill_all() {
	kill -9 $(pgrep -f $@) >/dev/null 2>&1
}

stop_service() {
	kill_all "$NAME.pid"
	rm -rf /var/etc/$NAME.cfg
}
